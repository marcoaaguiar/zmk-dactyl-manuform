#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    behaviors {
        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC   &kp N1   &kp N2 &kp N3    &kp N4      &kp N5 &none        &kp EQUAL   &kp N6          &kp N7      &kp N8    &kp N9    &kp N0    &kp MINUS
                &kp TAB   &kp Q    &kp W  &kp F     &kp P       &kp G  &none        &none       &kp J           &kp L       &kp U     &kp Y     &kp SEMI  &kp BSLH
                &kp ESC   &kp A    &kp R  &kp S     &kp T       &kp D  &none        &none       &kp H           &kp N       &kp E     &kp I     &kp O     &kp SINGLE_QUOTE
                &kp LSHFT &kp Z    &kp X  &kp C     &kp V       &kp B                           &kp K           &kp M       &kp COMMA &kp DOT   &kp SLASH &kp END
                &kp LCTRL &kp LGUI &none  &none                                                                             &none     &none     &none     &none
                                                    &mo RSE     &kp RSHFT                       &lt LWR SPACE   &kp ENTER
                                                    &none       &kp LCTRL                       &kp RALT        &none
                                                    &kp DELETE  &kp LALT                        &kp RALT        &kp CAPS
            >;
        };

        lower_layer {
            bindings = <
                &trans  &trans          &trans       &trans     &trans      &trans      &bootloader         &bootloader     &trans          &trans          &trans          &trans      &trans      &trans
                &trans  &kp EXCLAMATION &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT &trans              &trans          &kp CARET       &kp AMPERSAND   &kp ASTERISK    &trans      &trans      &trans   
                &trans  &trans          &kp LBRC     &kp LBKT   &kp LPAR    &kp GRAVE   &trans              &trans          &kp APOS        &kp RPAR        &kp RBKT        &kp RBRC    &trans      &trans
                &trans  &trans          &trans       &kp UNDER  &kp MINUS   &kp TILDE                                       &kp DQT         &kp EQUAL       &kp PLUS        &trans      &trans      &trans
                &trans  &trans          &trans       &trans                                                                                                 &trans          &trans      &trans      &trans
                                                                &trans      &trans                                                          &trans          &trans
                                                                &trans      &trans                                                          &trans          &trans
                                                                &trans      &trans                                                          &trans          &trans
            >;
        };

        raise_layer {
            bindings = <
            &trans      &kp F1              &kp F2      &kp F3      &kp F4      &kp F5      &kp F6              &kp F7  &kp F8      &kp F9      &kp F10     &kp F11         &kp F12         &trans
            &trans      &kp ESC             &trans      &kp LC(F)   &trans      &trans      &trans              &trans  &kp HOME    &kp PG_DN   &kp PG_UP   &kp END         &trans          &trans
            &trans      &kp LC(A)           &kp TAB     &kp LSHFT   &kp LCTRL   &kp LALT    &trans              &trans  &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT       &kp DEL         &trans
            &trans      &kp LC(Z)           &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp LC(B)                               &trans      &kp BSPC    &trans      &trans          &kp LGUI        &trans
            &kp C_STOP  &kp C_PLAY_PAUSE    &kp C_PREV  &kp C_NEXT                                                                              &trans      &kp C_MUTE      &kp C_VOL_UP    &kp C_VOL_DN
                                                                    &mo ADJ     &trans                                  &trans      &trans
                                                                    &trans      &trans                                  &trans      &trans
                                                                    &trans      &trans                                  &trans      &trans
            >;
        };

        adjust_layer {
            bindings = <
                &none &bt BT_SEL 0 &out OUT_BLE &none &none  &none &none        &none &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &ext_power EP_TOG
                &none &bt BT_SEL 1 &out OUT_USB &none &reset &none &none        &none &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &rgb_ug RGB_TOG
                &none &bt BT_SEL 2 &none        &none &none  &none &none        &none &none           &none           &none           &none           &none           &none 
                &none &bt BT_SEL 3 &bt BT_CLR   &none &none  &bootloader              &bootloader     &none           &none           &none           &none           &none
                &none &none        &none        &none                                                                 &none           &none           &none           &none
                                                            &none &none                      &none &none
                                                                  &none &none          &none &none
                                                                  &none &none          &none &none
            >;
        };
    };
};